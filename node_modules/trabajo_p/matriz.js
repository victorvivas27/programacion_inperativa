//COMO RECORRER UMA MATRIZ DE ARRAY

let matriz = [
    [1, 3, 5, 7],// FILA 0
    [0, 2, 4, 6],// FILA 1
    [8, 9, 10, 11]// FILA 2
] //COLUMNAS  0  1  2   3  

// AQUI RECORRE LA FILA 1 DE LA MATRIZ 

for (let i = 0; i < matriz[1].length; i++) {
    //console.log(matriz[1][i])
}
//AQUI RECORRE LA COLUMNA 2

for (let i = 0; i < matriz.length; i++) {
    //console.log(matriz[i][2])
}

// AQUI RECORRE TODOS LAS LAS FILAS DESDE 0 HASTA TERMINAR TODAS LAS FILAS

for (let fila = 0; fila < matriz.length; fila++) {
    for (let columna = 0; columna < matriz[fila].length; columna++) {
        //console.log(matriz[fila][columna])
    }
}

//AQUI RECORRE TODOS LAS LAS COLUMNAS  DESDE 0 HASTA TERMINAR TODAS LAS COLUMNAS 

for (let columna = 0; columna < matriz[0].length; columna++) {
    for (let fila = 0; fila < matriz.length; fila++) {
        //console.log(matriz[fila][columna])
    }
}
const mice1 = [
    ['Lucas', 'Camila', 'Pedro'],
    ['Juan', 'Luisa', null]
]
/console.table(mice);
mice[1][2] = 'Jerry'
console.table(mice);
//  Crear una función que reciba por parámetro la matriz creada e imprimir por consola
//  él saludo de cada elemento:
//  ○ Hola soy lucas
//  ○ Hola soy camila
//  ○ …
function imprimirSaludos(matriz) {
    for (let i = 0; i < matriz.length; i++) {
        for (let j = 0; j < matriz[i].length; j++) {
            console.log(`Hola soy ${matriz[i][j]}`);
        }
    }
}
//imprimirSaludos(mice1)
const gifts = ['cat', 'game', 'socks']

function wrapping(gifts) {
    return gifts.map((gift) => {
        const a = "*".repeat(gift.length + 2);
        return `${a}\n*${gift}*\n${a}`
    })
}
console.log(wrapping(gifts))
/* [
  "*****\n*cat*\n*****",
  "******\n*game*\n******",
  "*******\n*socks*\n*******"
] */