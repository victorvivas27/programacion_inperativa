/**
 * 1)Declara una variable que contenga una matriz
 * de 5x5 llena de puros numeros enteros y positivos
 */ const matrizA = [
    [35, 67, 34, 23, 09, 78],
    [76, 23, 65, 34, 12, 65],
    [87, 23, 58, 12, 02, 09],
    [76, 09, 12, 14, 98, 08],
    [85, 08, 15, 87, 90, 32],
    [32, 09, 12, 34, 56, 24]
]
//console.table(matriz)
/**
 * 1)Luego, escribe un algoritmo para sumar todos
 * los numeros en la matriz.
 */
//matriz[5][5] = 'x'
//console.table(matriz);
function sumaArray(matriz) { //SE CREA LA FUNCION 
    let suma = 0            //SE INICIALIZA LA VARIABLE 
    for (let i = 0; i < matriz.length; i++) { // SE UTILIZA PARA ITERAR SOBRE CADA FILA DE LA MATRIZ
        for (let j = 0; j < matriz[i].length; j++) { //SE UTILIZA PARA SEGUIR LA PISTA DEL INDICE DEL ELEMENTO ACTUAL
            suma = suma + matriz[i][j] //AUI SUMA EL ELMENTO ACTUAL A LA VARIABLE SUMA 
        }
    }
    return suma
}



//console.log(sumaArray(matriz))
// 2) Crear una función que genere una matriz de 10x10. Cada fila debe tener solo 10
// números.

function generarMatriz10por10(filas, columnas) {
    let matriz = []
    let cont = 1
    for (let i = 0; i < filas; i++) {
        matriz.push([])
        for (let j = 0; j < columnas; j++) {
            matriz[i].push(cont)
            cont++
        }
    }
    return matriz
}
//console.table(generarMatriz10por10(10,10))
let matriz = generarMatriz10por10(10, 10)

// 3) Por último, vamos a generar dos funciones:
// a) Una va a sumar los valores en la diagonal marcada en rojo.
// b) La otra va a marcar los valores de la diagonal marcada en verde.
// Ambas funciones deben devolver un resultado único.

function sumaDiagonalVerde(matriz) {
    let suma = 0
    for (let i = 0; i < matriz.length; i++) {
        suma += matriz[i][i]
    }
    return suma
}

//console.log(sumaDiagonalRojo(matriz))
function sumaDiagonalRojo(matriz) {
    let suma = 0
    for (let i = 0; i < matriz.length; i++) {
        suma += matriz[i][matriz.length - 1 - i]
    }
    return suma
}
//console.log(sumaDiagonalRojo(matriz))
function marcarDiagonalVerde(matriz) {
    for (let i = 0; i < matriz.length; i++) {
        for (let j = 0; j < matriz[i].length; j++) {
            if (i + j === matriz.length - 1) {
                matriz[i][j] = "X"

            }
        }
    }
    return matriz;
}
//console.table(marcarDiagonalVerde(matriz))


// function crearMatrizAleatroria(min, max, numFilas, numColumnas) {
//     let matriz = [];
//     for (let i = 0; i < numFilas; i++) {
//         matriz.push([]);
//         for (let j = 0; j < numColumnas; j++) {
//             matriz[i].push(Math.floor(Math.random() * (max - min) + min))
//         };
//     };
//     return matriz
// };
// //console.table(crearMatrizAleatroria(1,100,10,10));
//const element = array[i];