/*function anterior(a) {
    return a -1;
}
console.log(anterior(3));

function triple(anterior) {
    return anterior * 3;
}
console.log(triple(3));

function anteriorDeltriple(anterior,triple) {
    return anterior * triple - 1;
}

console.log(anteriorDeltriple());*/
/* 
    Crear una función esMayor() que reciba 2 numeros por parametro, la misma deberá evaluar 
    - si el primer es mayor o igual retornar el booleano true 
    - caso contrario retornar el booleano false

    Pistas: puedes resolver sin utilizar condicionales

    *desarrollar la solución con las 3 funciones explicadas en clase (declarada, expresada y flecha)

*/
//FUNCION DECLARADA:
//function esMayorDec(num1, num2) {
    //return num1 >= num2
//}
//console.log(esMayorDec(13, 10))

//FUNCION EXPRESADA:
//let esMayorExp = function (num1, num2) {
    //return num1 >= num2
//}
//console.log(esMayorExp(10, 13))

//FUNCION ARROW:
//let esMayorArr = (num1, num2) => num1 >= num2
//console.log(esMayorArr(22, 10))

//function suma =(a,b) => a+b
//      return a + b
//  } else {
//    return a - b
//}

//}
//console.log(sumarSi(10, 30))


//function functionpromedio(a, b, c, d) {
    //let prom = (a + b + c + d) / 4
    //console.log(prom)
    //if (prom >= 7) {
        //return 'Aprovadisimoooooo!!!!'
    //} else {
       // return 'Otra chance'
    //}
//}
//console.log(functionpromedio(7, 7, 7, 7));

//Dejo Desafío para quien quiera practicar, Martín                                                                                                                                                                                                                                                                           - En caso de resolverlo sin problemas reaccionar con :white_check_mark: ,                                                                                                                                                                                                                        - Caso  contrario,  consultar en este canal la duda acompañada con algo  código, *`Buen código`*```js
//A - Nivel 1
//1 - Desarrollar una función que reciba 2 numeros y retorne la suma de ambos
//function suma (num1,num2){
    //return num1+num2 
//}
//console.log(suma(100,30))
//let   sumar = (a,b)=> a+b 
//console.log(sumar(28,90));

//2 - Desarrollar una función que reciba 2 numeros y 
//retorne la suma de ambos, si el primer parametro es mayor, 
//caso contrario retornar la resta.
//function sumaResta (num1,num2){
    //if( num1>num2){
    //return num1+num2
//}else{
   // return num1-num2
//}
//}
//console.log(sumaResta(90,10))
//console.log(sumaResta(10,90))


//3 - Desarrollar una función que reciba 4 numeros y calcular la suma de total
//si el el resultado es mayor o igual a 7, retornar 'Aprobado', 
//caso contrario retornar 'otra chance '.
//function calculaPromedio (num1,num2,num3,num4){
//let promedio = (num1+num2+num3+num4) /4
//console.log(promedio)
//if (promedio >= 7) {
    //return'Aprobado'
//}else{
    //return 'Otra chance'
//}
//} 
//console.log(calculaPromedio(5,7,8,7))

//4 - Desarrollar una función que reciba 4 numeros y calcular la suma de total
//si el el resultado es par, retornar la mitad del total,  
//caso contrario retornar el doble del total.
 //function sumaTotalPar (num1,num2,num3,num4){
 //let sumar = num1+num2+num3+num4
 //console.log(sumar);
 //if(sumar % 2 ===0){
    //return sumar / 2
 //}else {
    //return sumar *2
 //}
//}
 //console.log(sumaTotalPar(24,20,21,46));

//B  Nivel 2
//-Declarar 3 arrays de edades por ejemplo -> [10, 9, 8, 22, 55, 80, 5, 63, 29, 9] , luego desarrollar las siguientes funciones:

let edad2 =[48,37,67,41,22,48,20,64,12,15]
let edad3 =[ 41,98,78,48,17,17,34,78,19,20]

function calcularPromedioEdad ( edad1){
    let suma = edad1.reduce((acomulador,edad1)=> acomulador + edad1,0)
    let promedio = suma/edad1.length
    return promedio
}
let edad1 =[ 27,29,65,89,23,76,23,45,56,87]
let promedio = calcularPromedioEdad(edad1)
console.log(promedio)
//1 - Funcion que reciba un array de edades y retorne el promedio 
//2 - Funcion que reciba un array de edades y retorne el mayor elemento // 80
//3 - Funcion que reciba un array de edades y retorne el menor elemento // 5
//4 - Funcion que reciba un array de edades y retorne true si encuentra algun elemento repetido o false caso contrario
//5 - Funcion que reciba un array de edades y una edada buscar, retorne el primer índice si encuentra coincidencia o null caso contrario
//6 - Funcion que reciba un array de edades y retorne un objeto literal con dos propiedades que contengan un array
//{
//edadesMenor : "// edades menor a 18",  
//edadesMayor : "// edades menor a 18"
//}
/*C  Nivel 3
1 - Desarrollar un objeto literal que contenga 5 propiedades que sean del siguiente tipo:
   - 2 String   
   - 1 Boolean
   - 1 Number
   - 1 Array
   - 1 Metodo que retorne un saludito
    * por ejemplo:
    
let canHijo = {
nombre : 'Negrito',
color  : 'Negrito',
estaVanunado : true,
    edad : 10,
    vacunas : ['Leptospirosis', 'Hepatitis', 'Parvovirus'],
    saludo: function(){
    return 'wouf wouf wouf..'
    } 
    }
    
- Luego desarrollar una funcion que liste individualmente los elementos de la propiedad del tipo Array 


2 - Dado el Siguiente array de personas desarrollar funciones:
  - Funcion que reciba el array de personas y liste el nombre de cada una. 
  - Funcion que reciba el array de personas y retorne en un array los que son programadores.
  - Funcion que reciba el array de personas y un id a buscar, 
    retorne la persona en caso de encontrar, 
    caso contrario retorne null
  - Funcion que reciba el array de personas y un id a buscar, 
    retorne la persona en caso de encontrar, 
    caso contrario retorne null 
[
    {
    "id": 0,
    "isProgrammer": true,
    "age": 28,
    "name": "Harrington Curry",
    "company": "TRANSLINK",
    "favoriteFruit": "strawberry"
    },
    {
    "id": 1,
    "isProgrammer": false,
    "age": 38,
    "name": "Greta Morton",
    "company": "PYRAMI",
    "favoriteFruit": "apple"
    },
    {
    "id": 2,
    "isProgrammer": false,
    "age": 32,
    "name": "Hester Bowen",
    "company": "TURNABOUT",
    "favoriteFruit": "apple"
    },
    {
    "id": 3,
    "isProgrammer": false,
    "age": 25,
    "name": "Melendez Mcfarland",
    "company": "XSPORTS",
    "favoriteFruit": "strawberry"
    },
    {
    "id": 4,
    "isProgrammer": false,
    "age": 31,
    "name": "Kimberly Matthews",
    "company": "KNOWLYSIS",
    "favoriteFruit": "banana"
    },
    {
    "id": 5,
    "isProgrammer": false,
    "age": 36,
    "name": "Hardin Sims",
    "company": "SEALOUD",
    "favoriteFruit": "banana"
    },
    {
    "id": 6,
    "isProgrammer": false,
    "age": 29,
    "name": "Natalia Huff",
    "company": "ENERSOL",
    "favoriteFruit": "apple"
    }
  ]
Tips
* Es para que practiquen sintaxis ademas del pensamiento computacional, piensen tipo de datos posibles.
* Desarrollen y lean enunciados en voz alta, utilicen abstracción, vean las alternativas de llegar al mismo resultado de diferentes formas
nota : Se recomienda utilizar estructuras y conceptos vistos en la materia*/